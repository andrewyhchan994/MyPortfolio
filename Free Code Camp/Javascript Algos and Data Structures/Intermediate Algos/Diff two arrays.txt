INSTRUCTIONS: compare two arrays and return new arrays with symmetric difference

---------------------------------------
//SOLUTION 1:
function diffArray(arr1, arr2) {
  const newArr = [];
  function callBack (item) {  
    return !arr1.includes(item) || !arr2.includes(item);

  }

  return arr1.concat(arr2).filter(callBack);
  
  // official solution
  // return arr1.concat(arr2)
  // .filter(item => !arr1.includes(item) || !arr2.includes(item))
  


  return newArr;
}

diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);

//SOLUTION 2:
function diffArray(arr1, arr2) {
  var newArr = [];

  function onlyInFirst(first, second) {
    // Looping through an array to find elements that don't exist in another array
    for (var i = 0; i < first.length; i++) {
      if (second.indexOf(first[i]) === -1) {
        // Pushing the elements unique to first to newArr
        newArr.push(first[i]);
      }
    }
  }

  onlyInFirst(arr1, arr2);
  onlyInFirst(arr2, arr1);

  return newArr;
}

diffArray([1, 2, 3, 5], [1, 2, 3, 4, 5]);

//SOLUTION 3:
function diffArray(arr1, arr2) {
  return [...diff(arr1, arr2), ...diff(arr2, arr1)];

  function diff(a, b) {
    return a.filter(item => b.indexOf(item) === -1);
  }
}
